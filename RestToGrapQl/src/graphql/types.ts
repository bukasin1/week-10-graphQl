import {GraphQLBoolean, GraphQLID, GraphQLInputObjectType, GraphQLObjectType, GraphQLSchema, GraphQLString} from 'graphql'


export const todoType = new GraphQLObjectType({
    name: "Todo",
    description: "A todo in our database",
    fields: () => ({
        id: {
            type: GraphQLID,
            description: "Todo id, generated by mongodb"
        },
        date: {
            type: GraphQLString,
            description: "The data task is to be carried out or done"
        },
        title: {
            type: GraphQLString,
            description: "Title of todo task"
        },
        details: {
            type: GraphQLString,
            description: "Details of the task to be done or carried out"
        },
        completed: {
            type: GraphQLBoolean,
            description: "Status of task, whether completed or not"
        },
        createdAt: {
            type: GraphQLString,
            description: "Date the task was created"
        },
        updatedAt: {
            type: GraphQLString,
            description: "Date the task was last updated"
        }
    })
})

export const deletedResponse = new GraphQLObjectType({
    name: "DeletedResponse",
    description: " Response from deleting a todo",
    fields: () => ({
        message: {
            type: GraphQLString,
            description: "Message after succesful deleting"
        }
    })
})

export const todoInput = new GraphQLInputObjectType({
    name: "TodoInput",
    description: "The input data to create todo",
    fields: () => ({
        title: {
            type: GraphQLString,
            description: "Title of todo task"
        },
        details: {
            type: GraphQLString,
            description: "Details of the task to be done or carried out"
        }
    })
})

export const loginInput = new GraphQLInputObjectType({
    name: "LoginInput",
    description: "The user details to login with",
    fields: () => ({
        email: {
            type: GraphQLString,
            description: "Email of user"
        },
        password: {
            type: GraphQLString,
            description: "Password of user"
        }
    })
})